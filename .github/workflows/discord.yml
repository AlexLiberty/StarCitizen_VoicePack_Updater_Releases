name: Notify Discord on Release

on:
  release:
    types: [published]

jobs:
  notify-discord:
    runs-on: ubuntu-latest
    steps:
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.USFDISCORDHOOK }}
          RELEASE_NAME: ${{ github.event.release.name }}
          RELEASE_BODY: ${{ github.event.release.body }}
          RELEASE_URL: ${{ github.event.release.html_url }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
        run: |
          IMAGE_URL=$(echo "$RELEASE_BODY" | grep -oP '!\[.*?\]\(\K.*?(?=\))' | head -n 1)
          CLEAN_DESCRIPTION=$(echo "$RELEASE_BODY" | sed -E 's/!\[.*?\]\(.*?\)//g')

          # –ü–µ—Ä—à–∏–π embed ‚Äî —Ç—ñ–ª—å–∫–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è (—è–∫ —à–∞–ø–∫–∞)
          if [ -n "$IMAGE_URL" ]; then
            IMAGE_EMBED=$(jq -n --arg image "$IMAGE_URL" '{image: { url: $image }}')
          else
            IMAGE_EMBED=""
          fi

          # –û—Å–Ω–æ–≤–Ω–∏–π embed –∑ –æ–ø–∏—Å–æ–º
          MAIN_EMBED=$(jq -n \
            --arg title "üöÄ –ù–æ–≤–∏–π —Ä–µ–ª—ñ–∑: $RELEASE_NAME" \
            --arg description "$CLEAN_DESCRIPTION" \
            --arg url "$RELEASE_URL" \
            --arg version "–í–µ—Ä—Å—ñ—è: $RELEASE_TAG" \
            --argjson color 5814783 \
            '{title: $title, description: ($version + "\n\n" + $description), url: $url, color: $color}')

          # –ö–æ–º–±—ñ–Ω—É—î–º–æ EMBED-–∏
          if [ -n "$IMAGE_URL" ]; then
            FINAL_JSON=$(jq -n --argjson a "$IMAGE_EMBED" --argjson b "$MAIN_EMBED" '{embeds: [$a, $b]}')
          else
            FINAL_JSON=$(jq -n --argjson b "$MAIN_EMBED" '{embeds: [$b]}')
          fi

          curl -X POST -H "Content-Type: application/json" \
            -d "$FINAL_JSON" \
            "$DISCORD_WEBHOOK"
